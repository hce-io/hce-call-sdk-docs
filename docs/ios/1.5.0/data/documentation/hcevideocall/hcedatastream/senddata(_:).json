{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sendData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Throws HceCall.SDKError.failedToSendData when error occurs. Detail description included."}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It can be accesssed through getDataStream() method of HceCall, and can be used to send\/receive data."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The localUserSessionId can be acquired from the callSessionLocalUserJoined:localUserSessionId:localUserId() callback."},{"type":"text","text":" "},{"type":"text","text":"The HceDataStream object acquired from getDataStream() method can be used to send\/receive data but its usability depends on the user’s connection status to the call."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"More specifically, the object can be used to send\/receive data after receiving “open” property from an onState callback."},{"type":"text","text":" "},{"type":"text","text":"The HceDataStream object is valid when the local user session is valid, so its lifecycle is from the local user’s “Join” to “Leave”."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After joining a call, the local user may acquire the HceDataStream object."},{"type":"text","text":" "},{"type":"text","text":"After receiving “open” the object can be used to send\/receive data."},{"type":"text","text":" "},{"type":"text","text":"After leaving a call, the stream becomes closed and the object becomes unusable."},{"type":"text","text":" "},{"type":"text","text":"The maximum Data transmission size limit can be found on Documentation (https:\/\/docs.hce.io) FAQ page."}]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Deprecated as of v1.2.3. Use sendMessage(_:onSend:)"}]}]},{"anchor":"example","level":2,"type":"heading","text":"example"},{"type":"codeListing","syntax":null,"code":["extension ViewController: HceCallSessionDelegate","    func callSessionLocalUserJoined(localUserSessionId: String, localUserId: String) {","        createDataChannel(localUserSessionId: localUserSessionId)","    }","}","","func createDataChannel(localUserSessionId: String) {","    guard let dataStream = engine.getDataStream(localUserSessionId: localUserSessionId) else {","        return","    }","    dataStream.receivedDataHandler = { [weak self] data in","        guard let message = String(data: data, encoding: .utf8) else {","            return","        }","        print(message)","    }","    dataStream.onState = { [weak self] state in","        guard let self = self else { return }","        switch state {","        case .open:","            print(\"HceDataStream OPEN\")","        case .closed:","            print(\"HceDataStream CLOSED\")","        @unknown default:","            print(\"HceDataStream unknown state\")","        }","    }","    self.dataStream = dataStream","}","","func sendData(message: String) {","    guard let dataStream = dataStream,","          let localUserSessionId = localUserSessionId else {","        return","    }","    if let data = message.data(using: .utf8) {","        do {","            try dataStream.sendData(data)","        } catch let error as HceCall.SDKError {","            if case .failedToSendData(let message) = error {","                \/\/ error processing","            }","        } catch let error as NSError {","            \/\/ error processing","        }","    }","}","","let mesasge = ...","sendData(mesasge: mesasge)"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"deprecated"}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hcevideocall\/hcedatastream\/senddata(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/io.hce.HceVideoCall\/documentation\/HceVideoCall\/HceDataStream\/sendData(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An object that can be used to send\/receive data between call participants."}],"kind":"symbol","metadata":{"modules":[{"name":"HceVideoCall"}],"role":"symbol","title":"sendData(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sendData"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"symbolKind":"method","externalID":"s:12HceVideoCall0A10DataStreamC04sendD0yy10Foundation0D0VKF","extendedModule":"HceVideoCall","platforms":[]},"hierarchy":{"paths":[["doc:\/\/io.hce.HceVideoCall\/documentation\/HceVideoCall","doc:\/\/io.hce.HceVideoCall\/documentation\/HceVideoCall\/HceDataStream"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Deprecated as of v1.2.3"}]}],"references":{"doc://io.hce.HceVideoCall/documentation/HceVideoCall/HceDataStream":{"role":"symbol","title":"HceDataStream","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HceDataStream"}],"abstract":[{"type":"text","text":"An object that can be used to send\/receive data between call participants."}],"identifier":"doc:\/\/io.hce.HceVideoCall\/documentation\/HceVideoCall\/HceDataStream","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HceDataStream"}],"url":"\/documentation\/hcevideocall\/hcedatastream"},"doc://io.hce.HceVideoCall/documentation/HceVideoCall/HceDataStream/sendData(_:)":{"role":"symbol","title":"sendData(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sendData"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"An object that can be used to send\/receive data between call participants."}],"identifier":"doc:\/\/io.hce.HceVideoCall\/documentation\/HceVideoCall\/HceDataStream\/sendData(_:)","kind":"symbol","type":"topic","deprecated":true,"url":"\/documentation\/hcevideocall\/hcedatastream\/senddata(_:)"},"doc://io.hce.HceVideoCall/documentation/HceVideoCall":{"role":"collection","title":"HceVideoCall","abstract":[],"identifier":"doc:\/\/io.hce.HceVideoCall\/documentation\/HceVideoCall","kind":"symbol","type":"topic","url":"\/documentation\/hcevideocall"}}}